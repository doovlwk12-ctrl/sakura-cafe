import { NextResponse } from 'next/server';

export async function POST(request: Request) {
  try {
    const body = await request.json();
    const { userEmail, expiryDate, points } = body;

    // ูุญุงูุงุฉ ุฅุฑุณุงู ุฅูููู ุญูููู
    console.log('๐ง ุฅุฑุณุงู ุฅูููู ุชูุจูู ุงูุชูุงุก ุงูููุงุท...');
    console.log(`๐ฌ ุฅูู: ${userEmail}`);
    console.log(`๐ ุชุงุฑูุฎ ุงูุงูุชูุงุก: ${expiryDate}`);
    console.log(`๐ฏ ุนุฏุฏ ุงูููุงุท: ${points}`);

    // ูุญุงูุงุฉ ุชุฃุฎูุฑ ุงูุฅุฑุณุงู
    await new Promise(resolve => setTimeout(resolve, 1000));

    // ูุญุงูุงุฉ ูุฌุงุญ ุงูุฅุฑุณุงู
    const emailContent = {
      to: userEmail,
      subject: 'ุชูุจูู: ููุงุทู ุนูู ูุดู ุงูุงูุชูุงุก - ูููู ุณุงููุฑุง',
      html: `
        <div dir="rtl" style="font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; border: 1px solid #ddd; border-radius: 10px; overflow: hidden;">
          <div style="background: linear-gradient(135deg, #f8b5c1, #e91e63); padding: 20px; text-align: center; color: white;">
            <h1 style="margin: 0; font-size: 24px;">๐ธ ูููู ุณุงููุฑุง</h1>
            <p style="margin: 5px 0 0 0; opacity: 0.9;">Sakura Cafe</p>
          </div>
          <div style="padding: 30px; background: #f9f9f9;">
            <h2 style="color: #e91e63; text-align: center; margin-top: 0;">ุชูุจูู ุงูุชูุงุก ุงูููุงุท</h2>
            <p style="font-size: 16px; line-height: 1.6; color: #333;">
              ูุฑุญุจุงู ุนุฒูุฒู ุงูุนูููุ
            </p>
            <p style="font-size: 16px; line-height: 1.6; color: #333;">
              ููุฏ ุฃู ููุจูู ุฃู ูุฏูู <strong style="color: #e91e63; font-size: 18px;">${points} ููุทุฉ</strong> 
              ุณุชูุชูู ุตูุงุญูุชูุง ูู <strong style="color: #e91e63;">${expiryDate}</strong>
            </p>
            <div style="background: white; padding: 20px; border-radius: 10px; margin: 20px 0; border-right: 4px solid #e91e63; box-shadow: 0 2px 4px rgba(0,0,0,0.1);">
              <h3 style="color: #e91e63; margin-top: 0;">๐ก ูุตูุญุฉ:</h3>
              <p style="margin: 0; color: #555;">ุงุณุชุฎุฏู ููุงุทู ุงูุขู ููุญุตูู ุนูู ููุงูุขุช ุฑุงุฆุนุฉ ุฃู ููุชุฌุงุช ูุฌุงููุฉ!</p>
            </div>
            <div style="text-align: center; margin: 30px 0;">
              <a href="http://localhost:3001/account/rewards" 
                 style="background: linear-gradient(135deg, #f8b5c1, #e91e63); 
                        color: white; 
                        padding: 15px 30px; 
                        text-decoration: none; 
                        border-radius: 25px; 
                        font-weight: bold;
                        display: inline-block;
                        box-shadow: 0 4px 8px rgba(233, 30, 99, 0.3);">
                ุงุณุชุฎุฏู ููุงุทู ุงูุขู
              </a>
            </div>
            <div style="background: #fff3cd; border: 1px solid #ffeaa7; border-radius: 8px; padding: 15px; margin: 20px 0;">
              <p style="margin: 0; color: #856404; font-size: 14px;">
                <strong>ููุงุญุธุฉ:</strong> ูุฐุง ุฅูููู ุชููุงุฆู ูู ูุธุงู ูููู ุณุงููุฑุง. ูุฑุฌู ุนุฏู ุงูุฑุฏ ุนูู ูุฐุง ุงูุฅูููู.
              </p>
            </div>
            <p style="font-size: 14px; color: #666; text-align: center; margin-top: 30px;">
              ุดูุฑุงู ูุงุฎุชูุงุฑู ูููู ุณุงููุฑุง ๐ธ<br>
              <small>ูุฐุง ุงูุฅูููู ุชู ุฅุฑุณุงูู ูู ${new Date().toLocaleString('ar-SA')}</small>
            </p>
          </div>
        </div>
      `
    };

    // ูุญุงูุงุฉ ุญูุธ ุงูุฅูููู ูู ูุงุนุฏุฉ ุงูุจูุงูุงุช
    const emailRecord = {
      id: `email_${Date.now()}`,
      to: userEmail,
      subject: emailContent.subject,
      sentAt: new Date().toISOString(),
      status: 'sent',
      type: 'points_expiry_notification',
      points: points,
      expiryDate: expiryDate
    };

    console.log('โ ุชู ุฅุฑุณุงู ุงูุฅูููู ุจูุฌุงุญ:', emailRecord.id);

    return NextResponse.json({ 
      success: true, 
      message: 'ุชู ุฅุฑุณุงู ุงูุชูุจูู ุจูุฌุงุญ',
      emailId: emailRecord.id,
      sentTo: userEmail,
      timestamp: new Date().toISOString()
    });

  } catch (error) {
    console.error('ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุฅูููู:', error);
    return NextResponse.json({ 
      success: false, 
      message: 'ุญุฏุซ ุฎุทุฃ ูู ุฅุฑุณุงู ุงูุชูุจูู',
      error: error instanceof Error ? error.message : 'Unknown error' 
    }, { status: 500 });
  }
}
